Even though a canary protects the stack from overwrite, with the forking process it is possible to brute force it by checking if the server responds with "DING" every time I add an extra byte. Despite the ASLR, an instruction in the yeet() function "jmp rsp" lets us directly execute instructions pointed to by the rsp. I directly placed the shellcode after the return address, which will be replaced with the address of jmp rsp. After rip jumps to the return address, the rsp will be moved to our shellcode, and jmp rsp will then be executed without ever knowing what rsp is. Since we are only allowed to read the server's response on the client side, I wrote a shellcode that opens and reads flag.txt then writes the content of flag.txt to the appropriate fd (4) for the client to see. Please see my code for details. 
